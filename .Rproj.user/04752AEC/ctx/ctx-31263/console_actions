{
    "type": [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        2
    ],
    "data": [
        "  row_5 <- c('Dig pref score - height', 'Incl', ",
        "+ ",
        "             '0-7 - Score 0', ",
        "+ ",
        "             '8-12 - Score 2', ",
        "+ ",
        "             '13-20 - Score 4', ",
        "+ ",
        "             '>20- Score 10',",
        "+ ",
        "             score_list$dps_height)",
        "+ ",
        "  row_6 <- c('Dig pref score - MUAC', 'Incl', ",
        "+ ",
        "             '0-7 - Score 0', ",
        "+ ",
        "             '8-12 - Score 2', ",
        "+ ",
        "             '13-20 - Score 4', ",
        "+ ",
        "             '>20- Score 10',",
        "+ ",
        "             score_list$dps_muac)",
        "+ ",
        "  row_7 <- c('Standard Dev WHZ', 'Excl', ",
        "+ ",
        "             '<1.1 & >0.9 - Score 0', ",
        "+ ",
        "             '<1.15 & >0.85 - Score 5', ",
        "+ ",
        "             '<1.20 & >0.80 - Score 10', ",
        "+ ",
        "             '>=1.20 & <=0.80 - Score 20',",
        "+ ",
        "             score_list$std_weight)",
        "+ ",
        "  row_8 <- c('Skewness  WHZ', 'Excl', ",
        "+ ",
        "             '<+-0.2 - Score 0', ",
        "+ ",
        "             '<+-0.4 - Score 1', ",
        "+ ",
        "             '<+-0.6 - Score 3', ",
        "+ ",
        "             '>+-0.6 - Score 5',",
        "+ ",
        "             score_list$skew)",
        "+ ",
        "  row_9 <- c('Kurtosis  WHZ', 'Excl', ",
        "+ ",
        "             '<+-0.2 - Score 0', ",
        "+ ",
        "             '<+-0.4 - Score 1', ",
        "+ ",
        "             '<+-0.6 - Score 3', ",
        "+ ",
        "             '>+-0.6 - Score 5',",
        "+ ",
        "             score_list$kur)",
        "+ ",
        "  row_10 <- c('Poisson dist WHZ-2', 'Excl', ",
        "+ ",
        "             '>0.05 - Score 0', ",
        "+ ",
        "             '>0.01 - Score 1', ",
        "+ ",
        "             '>0.001 - Score 3', ",
        "+ ",
        "             '<=0.001 - Score 5',",
        "+ ",
        "             score_list$poisson_score)",
        "+ ",
        "  row_11 <- c('Overall Score', '', ",
        "+ ",
        "              '0-9',",
        "+ ",
        "              '10-14',",
        "+ ",
        "              '15-24',",
        "+ ",
        "              '>25',",
        "+ ",
        "              score_list$overall_score)",
        "+ ",
        "  score_list_table <- rbind(row_1, row_2)",
        "+ ",
        "  score_list_table <- rbind(score_list_table, row_3)",
        "+ ",
        "  score_list_table <- rbind(score_list_table, row_4)",
        "+ ",
        "  score_list_table <- rbind(score_list_table, row_5)",
        "+ ",
        "  score_list_table <- rbind(score_list_table, row_6)",
        "+ ",
        "  score_list_table <- rbind(score_list_table, row_7)",
        "+ ",
        "  score_list_table <- rbind(score_list_table, row_8)",
        "+ ",
        "  score_list_table <- rbind(score_list_table, row_9)",
        "+ ",
        "  score_list_table <- rbind(score_list_table, row_10)",
        "+ ",
        "  score_list_table <- rbind(score_list_table, row_11)",
        "+ ",
        "  score_list_table <- data.frame(score_list_table)",
        "+ ",
        "  colnames(score_list_table) <- c('Criteria', 'Flags', 'Excel.', ",
        "+ ",
        "                                  'Good', 'Accept', 'Problematic', 'Result')",
        "+ ",
        "  rownames(score_list_table) <- NULL",
        "+ ",
        "  return(score_list_table)",
        "+ ",
        "}",
        "> ",
        "> ",
        "#' Function to qulify the type of overall score",
        "> ",
        "#'",
        "> ",
        "#' @param overall_score integer of the overall score",
        "> ",
        "#' @return [character] type of overall score",
        "> ",
        "f_type_score <- function(overall_score){",
        "+ ",
        "  if(overall_score <= 9){",
        "+ ",
        "    return('excellent')",
        "+ ",
        "  }else if(overall_score > 9 & overall_score <= 14){",
        "+ ",
        "    return('average')",
        "+ ",
        "  }else if(overall_score > 14 & overall_score <= 24){",
        "+ ",
        "    return('acceptable')",
        "+ ",
        "  }else{",
        "+ ",
        "    return('problematic')",
        "+ ",
        "  }",
        "+ ",
        "}",
        "> ",
        "> ",
        "#' Function to generate word document with plausibility score",
        "> ",
        "#'",
        "> ",
        "#' @param path_data Path for cluster data",
        "> ",
        "#' @return [data.frame] Clean cluster data",
        "> ",
        "#' @export",
        "> ",
        "generate_word_doc<- function(item, information, score_list, flagged_data){",
        "+ ",
        "  # Create the word document",
        "+ ",
        "  doc <- officer::read_docx()",
        "+ ",
        "  # Generate the title",
        "+ ",
        "  doc <- doc |>                                                                                                                                                                                                                                     ",
        "+ ",
        "    officer::body_add_par(paste(\"Plausibility check for: \", information[information$type_info == 'old_name',]$values, sep=\"\"), style = \"centered\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style='Normal')",
        "+ ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"1. Calculation of Overall Score\", style = \"heading 1\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\") ",
        "+ ",
        "  score_list_table <- f_generate_score_table_word(score_list)",
        "+ ",
        "  doc <- f_modify_table_style(doc, score_list_table)",
        "+ ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(paste(\"The overall score of this survey is \", ",
        "+ ",
        "                                100-score_list$overall_score, ",
        "+ ",
        "                                '%, this is ', f_type_score(score_list$overall_score), sep=\"\"), style = \"Normal\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")|>",
        "+ ",
        "    officer::body_add_par(paste(\"Percentage of children with no exact birthday: \", ",
        "+ ",
        "                                score_list$percent_no_exact_birth, sep=\"\"), style = \"Normal\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "+ ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"2. Flagged Data\", style = \"heading 1\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "+ ",
        "  doc <- f_modify_table_style(doc, flagged_data)",
        "+ ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"3. Quality Visualisation\", style = \"heading 1\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\") ",
        "+ ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"Gaussiant Curve Before Exclusion (Without Cleaning)\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "+ ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'with', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WHZ', ",
        "+ ",
        "                      group = 'All')",
        "+ ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "+ ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'with', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_HAZ', ",
        "+ ",
        "                      group = 'All')",
        "+ ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "+ ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'with', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WAZ', ",
        "+ ",
        "                      group = 'All')",
        "+ ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "+ ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"Gaussiant Curve After Exclusion (Cleaning)\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "+ ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WHZ', ",
        "+ ",
        "                      group = 'All')",
        "+ ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                                style = \"centered\")",
        "+ ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_HAZ', ",
        "+ ",
        "                      group = 'All')",
        "+ ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "+ ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WAZ', ",
        "+ ",
        "                      group = 'All')",
        "+ ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "+ ",
        "  ",
        "+ ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"Gaussiant Curve After Exclusion and Sex\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "+ ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WHZ', ",
        "+ ",
        "                      group = 'Sex')",
        "+ ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "+ ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_HAZ', ",
        "+ ",
        "                      group = 'Sex')",
        "+ ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "+ ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WAZ', ",
        "+ ",
        "                      group = 'Sex')",
        "+ ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "+ ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"MUAC Plot\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "+ ",
        "  plot <- plot_cumulative_curve(folder_name = item)",
        "+ ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "+ ",
        "  print(doc, target = paste(item, '/', \"plausibility_check_\", strsplit(information[information$type_info == 'old_name',]$values, split = \".as\")[[1]][1],\".docx\", sep=\"\"))",
        "+ ",
        "}",
        "> ",
        "    # Calculate quality score",
        "> ",
        "    score_list <- f_calcul_quality_score(information, ",
        "+ ",
        "                                         nutrition_data, ",
        "+ ",
        "                                         nutrition_data_clean)",
        "\u001B[1m\u001B[33mError\u001B[39m in `dplyr::summarise()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[36mℹ\u001B[39m In argument: `age_ratio = nipnTK::ageRatioTest(MONTHS, ratio = 0.85)[3]`.\n\u001B[1mCaused by error in `prop.test()`:\u001B[22m\n\u001B[33m!\u001B[39m les éléments de 'n' doivent être positifs\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "    nutrition_data <- rio::import(path_data)",
        "> ",
        "    # Calculate quality score",
        "> ",
        "    score_list <- f_calcul_quality_score(information, ",
        "+ ",
        "                                         nutrition_data, ",
        "+ ",
        "                                         nutrition_data_clean)",
        "\u001B[1m\u001B[33mError\u001B[39m in `dplyr::summarise()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[36mℹ\u001B[39m In argument: `age_ratio = nipnTK::ageRatioTest(MONTHS, ratio = 0.85)[3]`.\n\u001B[1mCaused by error in `prop.test()`:\u001B[22m\n\u001B[33m!\u001B[39m les éléments de 'n' doivent être positifs\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "    nutrition_data_clean <- rio::import(path_data)",
        "> ",
        "    if(nrow(nutrition_data_clean) == 0){",
        "+ ",
        "      return(rbind(information, c('overall_score', NA)))",
        "+ ",
        "    }",
        "Erreur : aucune fonction d'où sortir ; saut vers le niveau le plus haut\n",
        "> ",
        "    # read the file with flagged data",
        "> ",
        "    path_data <- paste(item,'/', wanted_no_clean[1], sep=\"\")",
        "> ",
        "    nutrition_data <- rio::import(path_data)",
        "> ",
        "    # Calculate quality score",
        "> ",
        "    score_list <- f_calcul_quality_score(information, ",
        "+ ",
        "                                         nutrition_data, ",
        "+ ",
        "                                         nutrition_data_clean)",
        "\u001B[1m\u001B[33mError\u001B[39m in `dplyr::summarise()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[36mℹ\u001B[39m In argument: `age_ratio = nipnTK::ageRatioTest(MONTHS, ratio = 0.85)[3]`.\n\u001B[1mCaused by error in `prop.test()`:\u001B[22m\n\u001B[33m!\u001B[39m les éléments de 'n' doivent être positifs\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "information",
        "            type_info                                 values\n1            old_name SOM_201411_LHZ_coastal_deeh_central.as\n2            new_name              som_lhz_coastal_2014_12_0\n3  admin_level_survey                                    lhz\n4   admin_name_survey                                coastal\n5         type_survey                              aggregate\n6      min_day_survey                                     20\n7    min_month_survey                                     12\n8     min_year_survey   ",
        "                                2014\n9      max_day_survey                                     20\n10   max_month_survey                                     12\n11    max_year_survey                                   2014\n12   access_nutrition                                   TRUE\n13   access_mortality                                   TRUE\n14    access_clusters                                  FALSE\n15        recall_days                                     93\n16           inj_code                           ",
        "        <NA>\n17          viol_code                                   <NA>\n18           unk_code                                      0\n19           flag_whz                                      0\n20           flag_waz                                      0\n21           flag_haz                                      0\n22           flag_bio                                      0\n23      overall_score                                   <NA>\n24      overall_score                                    0.6\n",
        "> ",
        "  flagged_data <- round(as.numeric(information[information$type_info == 'flag_whz',]$values), 2)",
        "> ",
        "  report_gam <- sum(ifelse(nutrition_data$WHZ < -2, 1, 0))/length(nutrition_data$WHZ)",
        "> ",
        "  report_sam <- sum(ifelse(nutrition_data$WHZ < -3, 1, 0))/length(nutrition_data$WHZ)",
        "> ",
        "  nutrition_data$SEX <- ifelse(nutrition_data$SEX == 'm', 1, 0)",
        "> ",
        "  overall_sex <- ifelse(all(is.na(nutrition_data$SEX)), yes=0, ",
        "+ ",
        "                        no=round(chisq.test(c(sum(nutrition_data$SEX), length(nutrition_data$SEX)-sum(nutrition_data$SEX)))$p.value, 2))  ",
        "> ",
        "  df <- nutrition_data |>",
        "+ ",
        "    dplyr::mutate(MONTHS = as.numeric(MONTHS)) |>",
        "+ ",
        "    dplyr::filter(!is.na(MONTHS)) |>",
        "+ ",
        "    dplyr::filter(MONTHS >= 6 & MONTHS < 60) |>",
        "+ ",
        "    dplyr::summarise(age_ratio = nipnTK::ageRatioTest(MONTHS, ratio = 0.85)[3],",
        "+ ",
        "                     age_ratio = round(as.numeric(age_ratio),2),",
        "+ ",
        "                     age_ratio.pvalue = round(as.numeric(nipnTK::ageRatioTest(MONTHS, ratio = 0.85)[7]),4),)",
        "\u001B[1m\u001B[33mError\u001B[39m in `dplyr::summarise()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[36mℹ\u001B[39m In argument: `age_ratio = nipnTK::ageRatioTest(MONTHS, ratio = 0.85)[3]`.\n\u001B[1mCaused by error in `prop.test()`:\u001B[22m\n\u001B[33m!\u001B[39m les éléments de 'n' doivent être positifs\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "nutrition_data |>",
        "+ ",
        "    dplyr::mutate(MONTHS = as.numeric(MONTHS)) |>",
        "+ ",
        "    dplyr::filter(!is.na(MONTHS)) |>",
        "+ ",
        "    dplyr::filter(MONTHS >= 6 & MONTHS < 60) ",
        " [1] SURVDATE CLUSTER  TEAM     ID       HH       SEX      BIRTHDAT MONTHS   WEIGHT   HEIGHT   EDEMA    MUAC    \n[13] WAZ      HAZ      WHZ      MEASURE  CLOTHES  STRATA   WTFACTOR V20      V21      V22      V23      flag_WHZ\n[25] flag_WAZ flag_HAZ flag_bio\n<0 lignes> (ou 'row.names' de longueur nulle)\n",
        "> ",
        "nutrition_data |>",
        "+ ",
        "    dplyr::mutate(MONTHS = as.numeric(MONTHS)) |>",
        "+ ",
        "    dplyr::filter(!is.na(MONTHS)) |>",
        "+ ",
        "    dplyr::filter(MONTHS >= 6 & MONTHS < 60) |>",
        "+ ",
        "    dplyr::summarise(age_ratio = nipnTK::ageRatioTest(MONTHS, ratio = 0.85)[3],",
        "+ ",
        "                     age_ratio = round(as.numeric(age_ratio),2),",
        "+ ",
        "                     age_ratio.pvalue = round(as.numeric(nipnTK::ageRatioTest(MONTHS, ratio = 0.85)[7]),4),)",
        "\u001B[1m\u001B[33mError\u001B[39m in `dplyr::summarise()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[36mℹ\u001B[39m In argument: `age_ratio = nipnTK::ageRatioTest(MONTHS, ratio = 0.85)[3]`.\n\u001B[1mCaused by error in `prop.test()`:\u001B[22m\n\u001B[33m!\u001B[39m les éléments de 'n' doivent être positifs\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "nutrition_data |>",
        "+ ",
        "    dplyr::mutate(MONTHS = as.numeric(MONTHS)) |>",
        "+ ",
        "    dplyr::filter(!is.na(MONTHS)) |>",
        "+ ",
        "    dplyr::filter(MONTHS >= 6 & MONTHS < 60) |>",
        "+ ",
        "    dplyr::summarise(age_ratio = nipnTK::ageRatioTest(MONTHS, ratio = 0.85)[3])",
        "\u001B[1m\u001B[33mError\u001B[39m in `dplyr::summarise()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[36mℹ\u001B[39m In argument: `age_ratio = nipnTK::ageRatioTest(MONTHS, ratio = 0.85)[3]`.\n\u001B[1mCaused by error in `prop.test()`:\u001B[22m\n\u001B[33m!\u001B[39m les éléments de 'n' doivent être positifs\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "View(nutrition_data |>",
        "+ ",
        "         dplyr::mutate(MONTHS = as.numeric(MONTHS)) |>",
        "+ ",
        "         dplyr::filter(!is.na(MONTHS)) |>",
        "+ ",
        "         dplyr::filter(MONTHS >= 6 & MONTHS < 60))",
        "> ",
        "items",
        " [1] \"C:/Users/oucht/OneDrive - London School of Hygiene and Tropical Medicine/Documents/Test_SMART_Survey_App/results/metadata.csv\"                      \n [2] \"C:/Users/oucht/OneDrive - London School of Hygiene and Tropical Medicine/Documents/Test_SMART_Survey_App/results/smart_with_issue\"                  \n [3] \"C:/Users/oucht/OneDrive - London School of Hygiene and Tropical Medicine/Documents/Test_SMART_Survey_App/results/som_admin2_BeletWeyne_2023_9_0\"    \n [4] \"C:/Users/oucht/OneDrive - London School o",
        "f Hygiene and Tropical Medicine/Documents/Test_SMART_Survey_App/results/som_dhuusamarreeb_admin2_2023_11_0\"\n [5] \"C:/Users/oucht/OneDrive - London School of Hygiene and Tropical Medicine/Documents/Test_SMART_Survey_App/results/som_lhz_addun_2014_7_0\"            \n [6] \"C:/Users/oucht/OneDrive - London School of Hygiene and Tropical Medicine/Documents/Test_SMART_Survey_App/results/som_lhz_coastal_2014_12_0\"         \n [7] \"C:/Users/oucht/OneDrive - London School of Hygiene and Tropical Medicine/Documents/Test_",
        "SMART_Survey_App/results/som_lhz_golis_2015_7_0\"            \n [8] \"C:/Users/oucht/OneDrive - London School of Hygiene and Tropical Medicine/Documents/Test_SMART_Survey_App/results/som_lhz_golis_2023_12_0\"           \n [9] \"C:/Users/oucht/OneDrive - London School of Hygiene and Tropical Medicine/Documents/Test_SMART_Survey_App/results/som_lhz_hawd_2015_12_0\"            \n[10] \"C:/Users/oucht/OneDrive - London School of Hygiene and Tropical Medicine/Documents/Test_SMART_Survey_App/results/som_lhz_nip_2016_7_0\" ",
        "             \n[11] \"C:/Users/oucht/OneDrive - London School of Hygiene and Tropical Medicine/Documents/Test_SMART_Survey_App/results/som_lhz_nip_2016_7_1\"              \n[12] \"C:/Users/oucht/OneDrive - London School of Hygiene and Tropical Medicine/Documents/Test_SMART_Survey_App/results/som_lhz_riverine_2014_1_0\"         \n",
        "> ",
        "item <- items[3]",
        "> ",
        "        # Clean information in the log_file",
        "> ",
        "        information <- f_add_clean_infos(item, log_file)",
        "> ",
        "        # Clean and save cluster data",
        "> ",
        "        f_clean_and_export_cluster_data(item, information)",
        "> ",
        "        # Clean and save mortality data",
        "> ",
        "        f_clean_and_export_mortality_data(item, information)",
        "> ",
        "        # Clean and save nutrition data",
        "> ",
        "        information <- f_clean_and_export_nutritition_data(item, information, cleaning_criteria)",
        "> ",
        "        information <- information[[1]]",
        "> ",
        "        # Generate plausibility score and report",
        "> ",
        "        information <- f_calcul_and_report_plausibility_score(item, information)",
        "Erreur dans officer::body_add_gg(doc, value = plot, style = \"centered\") : \n  inherits(value, \"gg\") n'est pas TRUE\nDe plus : Message d'avis :\nDans chisq.test(as.table(count)) :\n  L’approximation du Chi-2 est peut-être incorrecte\n",
        "> ",
        "  # Read nutrition data",
        "> ",
        "  ## Select all the files in the folder",
        "> ",
        "  all_files <- list.files(path = item, pattern = \".csv\")",
        "> ",
        "  ## Find the cluster one",
        "> ",
        "  all_files <- all_files[grepl(pattern = 'nutrition', x=all_files)]",
        "> ",
        "  ## But one without any cleaning process",
        "> ",
        "  wanted_clean <- all_files[grepl(pattern = 'clean', x=all_files)]",
        "> ",
        "  wanted_no_clean <- base::setdiff(all_files, all_files[grepl(pattern = 'clean', x=all_files)])",
        "> ",
        "  ## If there is a cluster file - we can clean it",
        "> ",
        "  if(length(wanted_clean) != 0){",
        "+ ",
        "    # Extract name of the data",
        "+ ",
        "    # read the file without flagged data",
        "+ ",
        "    path_data <- paste(item,'/', wanted_clean[1], sep=\"\")",
        "+ ",
        "    nutrition_data_clean <- rio::import(path_data)",
        "+ ",
        "    if(nrow(nutrition_data_clean) == 0){",
        "+ ",
        "      return(rbind(information, c('overall_score', NA)))",
        "+ ",
        "    }",
        "+ ",
        "    # read the file with flagged data",
        "+ ",
        "    path_data <- paste(item,'/', wanted_no_clean[1], sep=\"\")",
        "+ ",
        "    nutrition_data <- rio::import(path_data)",
        "+ ",
        "    # Calculate quality score",
        "+ ",
        "    score_list <- f_calcul_quality_score(information, ",
        "+ ",
        "                                         nutrition_data, ",
        "+ ",
        "                                         nutrition_data_clean)",
        "+ ",
        "    information <- rbind(information, c('overall_score', score_list$overall_score))",
        "+ ",
        "    flagged_data <- nutrition_data |> dplyr::filter(flag_WHZ == 1 | flag_WAZ == 1 |",
        "+ ",
        "                                                      flag_HAZ == 1 | flag_bio == 1) |>",
        "+ ",
        "      dplyr::select(CLUSTER, TEAM, ID, WAZ, HAZ, WHZ, flag_WHZ, flag_HAZ, flag_WAZ, flag_bio)",
        "+ ",
        "    generate_word_doc(item, information, score_list, flagged_data)",
        "+ ",
        "    return(information)",
        "+ ",
        "  }",
        "Erreur dans officer::body_add_gg(doc, value = plot, style = \"centered\") : \n  inherits(value, \"gg\") n'est pas TRUE\nDe plus : Message d'avis :\nDans chisq.test(as.table(count)) :\n  L’approximation du Chi-2 est peut-être incorrecte\n",
        "> ",
        "  # Create the word document",
        "> ",
        "  doc <- officer::read_docx()",
        "> ",
        "  # Generate the title",
        "> ",
        "  doc <- doc |>                                                                                                                                                                                                                                     ",
        "+ ",
        "    officer::body_add_par(paste(\"Plausibility check for: \", information[information$type_info == 'old_name',]$values, sep=\"\"), style = \"centered\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style='Normal')",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"1. Calculation of Overall Score\", style = \"heading 1\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\") ",
        "> ",
        "  score_list_table <- f_generate_score_table_word(score_list)",
        "> ",
        "  doc <- f_modify_table_style(doc, score_list_table)",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(paste(\"The overall score of this survey is \", ",
        "+ ",
        "                                100-score_list$overall_score, ",
        "+ ",
        "                                '%, this is ', f_type_score(score_list$overall_score), sep=\"\"), style = \"Normal\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")|>",
        "+ ",
        "    officer::body_add_par(paste(\"Percentage of children with no exact birthday: \", ",
        "+ ",
        "                                score_list$percent_no_exact_birth, sep=\"\"), style = \"Normal\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"2. Flagged Data\", style = \"heading 1\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "> ",
        "  doc <- f_modify_table_style(doc, flagged_data)",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"3. Quality Visualisation\", style = \"heading 1\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\") ",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"Gaussiant Curve Before Exclusion (Without Cleaning)\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'with', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WHZ', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'with', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_HAZ', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'with', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WAZ', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"Gaussiant Curve After Exclusion (Cleaning)\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WHZ', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                                style = \"centered\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_HAZ', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WAZ', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"Gaussiant Curve After Exclusion and Sex\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WHZ', ",
        "+ ",
        "                      group = 'Sex')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "Erreur dans officer::body_add_gg(doc, value = plot, style = \"centered\") : \n  inherits(value, \"gg\") n'est pas TRUE\n",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_HAZ', ",
        "+ ",
        "                      group = 'SEX')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "\nRestarting R session...\n\n",
        "Erreur dans file.exists(pythonPath) : \n  problème de conversion de nom de fichier -- nom trop long ?\nErreur dans xml_ns.xml_document(x) : external pointer is not valid\n",
        "> ",
        "library(smartcleaning)",
        "Erreur dans xml_ns.xml_document(x) : external pointer is not valid\nErreur dans xml_ns.xml_document(x) : external pointer is not valid\n",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"MUAC Plot\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "Erreur dans xml_ns.xml_document(x) : external pointer is not valid\n",
        "> ",
        "  plot <- plot_cumulative_curve(nutrition_file = item)",
        "Erreur : 'file' has no extension\n",
        "> ",
        "item",
        "[1] \"C:/Users/oucht/OneDrive - London School of Hygiene and Tropical Medicine/Documents/Test_SMART_Survey_App/results/som_admin2_BeletWeyne_2023_9_0\"\n",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"MUAC Plot\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "Erreur dans xml_ns.xml_document(x) : external pointer is not valid\n",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'cum_muac', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "Erreur dans xml_ns.xml_document(x) : external pointer is not valid\n",
        "> ",
        "plot_anthro(folder_name = item, ",
        "+ ",
        "            exclusion = 'without', ",
        "+ ",
        "            type_of_plot = 'cum_muac', ",
        "+ ",
        "            group = 'All')",
        "> ",
        "doc <- officer::read_docx()",
        "> ",
        "  # Generate the title",
        "> ",
        "  doc <- doc |>                                                                                                                                                                                                                                     ",
        "+ ",
        "    officer::body_add_par(paste(\"Plausibility check for: \", information[information$type_info == 'old_name',]$values, sep=\"\"), style = \"centered\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style='Normal')",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"1. Calculation of Overall Score\", style = \"heading 1\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\") ",
        "> ",
        "  score_list_table <- f_generate_score_table_word(score_list)",
        "> ",
        "  doc <- f_modify_table_style(doc, score_list_table)",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(paste(\"The overall score of this survey is \", ",
        "+ ",
        "                                100-score_list$overall_score, ",
        "+ ",
        "                                '%, this is ', f_type_score(score_list$overall_score), sep=\"\"), style = \"Normal\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")|>",
        "+ ",
        "    officer::body_add_par(paste(\"Percentage of children with no exact birthday: \", ",
        "+ ",
        "                                score_list$percent_no_exact_birth, sep=\"\"), style = \"Normal\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"2. Flagged Data\", style = \"heading 1\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "> ",
        "  doc <- f_modify_table_style(doc, flagged_data)",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"3. Quality Visualisation\", style = \"heading 1\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\") ",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"Gaussiant Curve Before Exclusion (Without Cleaning)\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'with', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WHZ', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'with', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_HAZ', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'with', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WAZ', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"Gaussiant Curve After Exclusion (Cleaning)\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WHZ', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                                style = \"centered\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_HAZ', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WAZ', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  ",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"Gaussiant Curve After Exclusion and Sex\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "> ",
        "  ",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WHZ', ",
        "+ ",
        "                      group = 'SEX')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_HAZ', ",
        "+ ",
        "                      group = 'SEX')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'gaussian_curve_WAZ', ",
        "+ ",
        "                      group = 'SEX')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "  doc <- doc |>",
        "+ ",
        "    officer::body_add_par(\"MUAC Plot\", style = \"heading 3\") |>",
        "+ ",
        "    officer::body_add_par(\" \", style = \"Normal\")",
        "> ",
        "  plot <- plot_anthro(folder_name = item, ",
        "+ ",
        "                      exclusion = 'without', ",
        "+ ",
        "                      type_of_plot = 'cum_muac', ",
        "+ ",
        "                      group = 'All')",
        "> ",
        "  doc <- officer::body_add_gg(doc, value = plot ,",
        "+ ",
        "                              style = \"centered\")",
        "> ",
        "doc",
        "rdocx document with 33 element(s)\n\n* styles:\n                Normal              heading 1              heading 2              heading 3 Default Paragraph Font \n           \"paragraph\"            \"paragraph\"            \"paragraph\"            \"paragraph\"            \"character\" \n          Normal Table                No List                 strong               centered         table_template \n               \"table\"            \"numbering\"            \"character\"            \"paragraph\"                \"table\" \n   ",
        "Light List Accent 2            Titre 1 Car            Titre 2 Car            Titre 3 Car          Image Caption \n               \"table\"            \"character\"            \"character\"            \"character\"            \"paragraph\" \n         Table Caption     Table Professional                  toc 1                  toc 2           Balloon Text \n           \"paragraph\"                \"table\"            \"paragraph\"            \"paragraph\"            \"paragraph\" \n   Texte de bulles Car           reference_id      ",
        "    graphic title            table title \n           \"character\"            \"character\"            \"paragraph\"            \"paragraph\" \n\n* Content at cursor location:\n  level num_id text style_name content_type\n1    NA     NA        centered    paragraph\n\nRestarting R session...\n\n",
        "Erreur dans file.exists(pythonPath) : \n  problème de conversion de nom de fichier -- nom trop long ?\nErreur dans xml_ns.xml_document(x) : external pointer is not valid\n",
        "> ",
        "library(smartcleaning)",
        "Erreur dans xml_ns.xml_document(x) : external pointer is not valid\n",
        "\nRestarting R session...\n\n",
        "Erreur dans file.exists(pythonPath) : \n  problème de conversion de nom de fichier -- nom trop long ?\nErreur dans xml_ns.xml_document(x) : external pointer is not valid\n",
        "> ",
        "library(smartcleaning)",
        "Erreur dans xml_ns.xml_document(x) : external pointer is not valid\nErreur dans xml_ns.xml_document(x) : external pointer is not valid\n",
        "> ",
        "install.packages('smartextract')",
        "Installation du package dans ‘C:/Users/oucht/AppData/Local/R/win-library/4.3’\n(car ‘lib’ n'est pas spécifié)\n",
        "Warning in install.packages :\n  le package ‘smartextract’ n'est pas disponible for this version of R\n\nUne version de ce package pour votre version de R est peut-être disponible ailleurs,\nVoyez des idées à\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\nRestarting R session...\n\n",
        "Erreur dans file.exists(pythonPath) : \n  problème de conversion de nom de fichier -- nom trop long ?\nErreur dans xml_ns.xml_document(x) : external pointer is not valid\n",
        "> ",
        "library(smartcleaning)",
        "\nRestarting R session...\n\n"
    ]
}